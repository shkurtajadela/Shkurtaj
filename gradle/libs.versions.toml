[versions]
kotlin = "1.9.0"
android-gradle = "8.2.0"
activity-compose = "1.8.2"
navigation-compose = "2.7.7"
core-ktx = "1.12.0"
lifecycle-runtime-ktx = "2.7.0"
espresso-core = "3.5.1"
androidx-junit = "1.1.5"
junit = "4.13.2"
compose-bom = "2024.02.00"
coil = "2.4.0"
room = "2.6.1"
retrofit = "2.9.0"
okHttp = "4.11.0"
okHttp-logging = "4.11.0"
dagger = "2.48"
dagger-compose = "1.0.0"
hilt-compiler = "1.0.0"

[libraries]
# Core
androidx-core-ktx = { module = "androidx.core:core-ktx", version.ref = "core-ktx" }
androidx-lifecycle-runtime-ktx = { module = "androidx.lifecycle:lifecycle-runtime-ktx", version.ref = "lifecycle-runtime-ktx" }

# Compose
androidx-activity-compose = { module = "androidx.activity:activity-compose", version.ref = "activity-compose" }
androidx-lifecycle-compose = { module = "androidx.lifecycle:lifecycle-runtime-compose", version.ref = "lifecycle-runtime-ktx" }
androidx-lifecycle-viewmodel-compose = { module = "androidx.lifecycle:lifecycle-viewmodel-compose", version.ref = "lifecycle-runtime-ktx" }
compose-bom = { module = "androidx.compose:compose-bom", version.ref = "compose-bom" }
compose-ui = { module = "androidx.compose.ui:ui" }
compose-ui-graphics = { module = "androidx.compose.ui:ui-graphics" }
compose-ui-preview = { module = "androidx.compose.ui:ui-tooling-preview" }
compose-ui-tooling = { module = "androidx.compose.ui:ui-tooling" }
compose-material3 = { module = "androidx.compose.material3:material3" }
androidx-compose-ui-test-manifest = { module = "androidx.compose.ui:ui-test-manifest" }
androidx-navigation-runtime-ktx = { module = "androidx.navigation:navigation-compose", version.ref = "navigation-compose" }

# Testing
androidx-espresso-core = { module = "androidx.test.espresso:espresso-core", version.ref = "espresso-core" }
androidx-compose-ui-junit4 = { module = "androidx.compose.ui:ui-test-junit4" }
androidx-junit = { module = "androidx.test.ext:junit", version.ref = "androidx-junit" }
junit = { module = "junit:junit", version.ref = "junit" }

# Coil
coil-compose = { module = "io.coil-kt:coil-compose", version.ref = "coil" }
coil-svg = { module = "io.coil-kt:coil-svg", version.ref = "coil" }

# Room
room-runtime = { group = "androidx.room", name = "room-runtime", version.ref = "room" }
room-compiler = { group = "androidx.room", name = "room-compiler", version.ref = "room" }
room-ktx = { group = "androidx.room", name = "room-ktx", version.ref = "room" }

# Retrofit
retrofit-core = { module = "com.squareup.retrofit2:retrofit", version.ref = "retrofit" }
retrofit-gson-converter = { module = "com.squareup.retrofit2:converter-gson", version.ref = "retrofit" }
okHttp-core = { module = "com.squareup.okhttp3:okhttp", version.ref = "okHttp" }
okHttp-logging-interceptor = { module = "com.squareup.okhttp3:logging-interceptor", version.ref = "okHttp-logging" }

# Dagger Hilt
dagger-core = { module = "com.google.dagger:hilt-android", version.ref = "dagger" }
dagger-compiler = { module = "com.google.dagger:hilt-android-compiler", version.ref = "dagger" }
dagger-compose = { module = "androidx.hilt:hilt-navigation-compose", version.ref = "dagger-compose" }
hilt-compiler = { module = "androidx.hilt:hilt-compiler", version.ref = "hilt-compiler" }

[plugins]
android-application = { id = "com.android.application", version.ref = "android-gradle" }
android-kotlin = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
kotlin-kapt = { id = "org.jetbrains.kotlin.kapt", version.ref = "kotlin" }
dagger-hilt = { id = "com.google.dagger.hilt.android", version.ref = "dagger" }


[bundles]
compose = ["androidx-activity-compose", "androidx-lifecycle-compose", "androidx-lifecycle-viewmodel-compose", "compose-ui", "compose-ui-graphics", "compose-ui-preview", "compose-material3", "androidx-navigation-runtime-ktx"]
testing = ["androidx-espresso-core", "androidx-junit", "androidx-compose-ui-junit4"]
debug = ["compose-ui-tooling", "androidx-compose-ui-test-manifest"]
coil = ["coil-compose", "coil-svg"]
room = ["room-runtime", "room-ktx"]
retrofit = ["retrofit-core", "retrofit-gson-converter", "okHttp-core", "okHttp-logging-interceptor"]
dagger = ["dagger-core", "dagger-compose"]